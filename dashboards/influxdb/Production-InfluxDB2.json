{
    "meta": {
     "version": "1",
     "type": "dashboard",
     "name": "Solar Production Overview-Template",
     "description": "template created from dashboard: Solar Production Overview"
    },
    "content": {
     "data": {
      "type": "dashboard",
      "attributes": {
       "name": "Solar Production Overview",
       "description": "Dashboard displaying the Parker Lane solar production statistics."
      },
      "relationships": {
       "label": {
        "data": [
         {
          "type": "label",
          "id": "07227e027e203000"
         }
        ]
       },
       "cell": {
        "data": [
         {
          "type": "cell",
          "id": "0711cf2d13914000"
         },
         {
          "type": "cell",
          "id": "071af7257c514000"
         },
         {
          "type": "cell",
          "id": "071af7aa6f514000"
         },
         {
          "type": "cell",
          "id": "071af83133114000"
         },
         {
          "type": "cell",
          "id": "071af9e8f5114000"
         },
         {
          "type": "cell",
          "id": "071afa5b00d14000"
         },
         {
          "type": "cell",
          "id": "071afef3f3d14000"
         },
         {
          "type": "cell",
          "id": "071aff0e99914000"
         },
         {
          "type": "cell",
          "id": "071b008de3d14000"
         },
         {
          "type": "cell",
          "id": "071b0187d8114000"
         },
         {
          "type": "cell",
          "id": "071b01fe87514000"
         },
         {
          "type": "cell",
          "id": "071b0334ef514000"
         },
         {
          "type": "cell",
          "id": "071b035420d14000"
         },
         {
          "type": "cell",
          "id": "071b03640c114000"
         },
         {
          "type": "cell",
          "id": "071b0398e5114000"
         },
         {
          "type": "cell",
          "id": "071b03a016d14000"
         },
         {
          "type": "cell",
          "id": "071b0407cf114000"
         },
         {
          "type": "cell",
          "id": "071b048367514000"
         },
         {
          "type": "cell",
          "id": "071b0486aa914000"
         },
         {
          "type": "cell",
          "id": "071b048cee514000"
         },
         {
          "type": "cell",
          "id": "071b048f3c914000"
         },
         {
          "type": "cell",
          "id": "071b049229114000"
         },
         {
          "type": "cell",
          "id": "071b0494bc114000"
         },
         {
          "type": "cell",
          "id": "071b536983d14000"
         },
         {
          "type": "cell",
          "id": "071b540be1114000"
         },
         {
          "type": "cell",
          "id": "071b6c4f92d14000"
         }
        ]
       },
       "variable": {
        "data": []
       }
      }
     },
     "included": [
      {
       "type": "label",
       "id": "07227e027e203000",
       "attributes": {
        "name": "multisma2",
        "properties": {
         "color": "#9bf445",
         "description": ""
        }
       }
      },
      {
       "id": "0711cf2d13914000",
       "type": "cell",
       "attributes": {
        "x": 0,
        "y": 3,
        "w": 5,
        "h": 3
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "0711cf2d13914000"
         }
        }
       }
      },
      {
       "id": "071af7257c514000",
       "type": "cell",
       "attributes": {
        "x": 0,
        "y": 6,
        "w": 5,
        "h": 3
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071af7257c514000"
         }
        }
       }
      },
      {
       "id": "071af7aa6f514000",
       "type": "cell",
       "attributes": {
        "x": 5,
        "y": 3,
        "w": 5,
        "h": 3
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071af7aa6f514000"
         }
        }
       }
      },
      {
       "id": "071af83133114000",
       "type": "cell",
       "attributes": {
        "x": 5,
        "y": 6,
        "w": 5,
        "h": 3
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071af83133114000"
         }
        }
       }
      },
      {
       "id": "071af9e8f5114000",
       "type": "cell",
       "attributes": {
        "x": 5,
        "y": 0,
        "w": 5,
        "h": 3
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071af9e8f5114000"
         }
        }
       }
      },
      {
       "id": "071afa5b00d14000",
       "type": "cell",
       "attributes": {
        "x": 0,
        "y": 0,
        "w": 5,
        "h": 3
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071afa5b00d14000"
         }
        }
       }
      },
      {
       "id": "071afef3f3d14000",
       "type": "cell",
       "attributes": {
        "x": 10,
        "y": 0,
        "w": 2,
        "h": 2
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071afef3f3d14000"
         }
        }
       }
      },
      {
       "id": "071aff0e99914000",
       "type": "cell",
       "attributes": {
        "x": 10,
        "y": 2,
        "w": 2,
        "h": 2
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071aff0e99914000"
         }
        }
       }
      },
      {
       "id": "071b008de3d14000",
       "type": "cell",
       "attributes": {
        "x": 10,
        "y": 4,
        "w": 2,
        "h": 2
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b008de3d14000"
         }
        }
       }
      },
      {
       "id": "071b0187d8114000",
       "type": "cell",
       "attributes": {
        "x": 10,
        "y": 6,
        "w": 2,
        "h": 2
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b0187d8114000"
         }
        }
       }
      },
      {
       "id": "071b01fe87514000",
       "type": "cell",
       "attributes": {
        "x": 10,
        "y": 8,
        "w": 2,
        "h": 2
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b01fe87514000"
         }
        }
       }
      },
      {
       "id": "071b0334ef514000",
       "type": "cell",
       "attributes": {
        "x": 2,
        "y": 9,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b0334ef514000"
         }
        }
       }
      },
      {
       "id": "071b035420d14000",
       "type": "cell",
       "attributes": {
        "x": 2,
        "y": 10,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b035420d14000"
         }
        }
       }
      },
      {
       "id": "071b03640c114000",
       "type": "cell",
       "attributes": {
        "x": 2,
        "y": 11,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b03640c114000"
         }
        }
       }
      },
      {
       "id": "071b0398e5114000",
       "type": "cell",
       "attributes": {
        "x": 4,
        "y": 9,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b0398e5114000"
         }
        }
       }
      },
      {
       "id": "071b03a016d14000",
       "type": "cell",
       "attributes": {
        "x": 6,
        "y": 9,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b03a016d14000"
         }
        }
       }
      },
      {
       "id": "071b0407cf114000",
       "type": "cell",
       "attributes": {
        "x": 8,
        "y": 9,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b0407cf114000"
         }
        }
       }
      },
      {
       "id": "071b048367514000",
       "type": "cell",
       "attributes": {
        "x": 4,
        "y": 11,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b048367514000"
         }
        }
       }
      },
      {
       "id": "071b0486aa914000",
       "type": "cell",
       "attributes": {
        "x": 4,
        "y": 10,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b0486aa914000"
         }
        }
       }
      },
      {
       "id": "071b048cee514000",
       "type": "cell",
       "attributes": {
        "x": 6,
        "y": 11,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b048cee514000"
         }
        }
       }
      },
      {
       "id": "071b048f3c914000",
       "type": "cell",
       "attributes": {
        "x": 6,
        "y": 10,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b048f3c914000"
         }
        }
       }
      },
      {
       "id": "071b049229114000",
       "type": "cell",
       "attributes": {
        "x": 8,
        "y": 11,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b049229114000"
         }
        }
       }
      },
      {
       "id": "071b0494bc114000",
       "type": "cell",
       "attributes": {
        "x": 8,
        "y": 10,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b0494bc114000"
         }
        }
       }
      },
      {
       "id": "071b536983d14000",
       "type": "cell",
       "attributes": {
        "x": 0,
        "y": 9,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b536983d14000"
         }
        }
       }
      },
      {
       "id": "071b540be1114000",
       "type": "cell",
       "attributes": {
        "x": 0,
        "y": 10,
        "w": 2,
        "h": 1
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b540be1114000"
         }
        }
       }
      },
      {
       "id": "071b6c4f92d14000",
       "type": "cell",
       "attributes": {
        "x": 10,
        "y": 10,
        "w": 2,
        "h": 2
       },
       "relationships": {
        "view": {
         "data": {
          "type": "view",
          "id": "071b6c4f92d14000"
         }
        }
       }
      },
      {
       "type": "view",
       "id": "0711cf2d13914000",
       "attributes": {
        "name": "Site Power",
        "properties": {
         "shape": "chronograf-v2",
         "type": "gauge",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -5m)\n  |> filter(fn: (r) => r._measurement == \"ac_measurements\" and r._field == \"power\" and r._inverter == \"site\")\n  |> last()\n  |> drop(columns: [\"_start\", \"_stop\"])\n  |> yield(name: \"site_power\")",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "false",
         "suffix": " W",
         "tickSuffix": "true",
         "colors": [
          {
           "id": "0",
           "type": "min",
           "hex": "#DC4E58",
           "name": "fire",
           "value": 0
          },
          {
           "id": "1",
           "type": "max",
           "hex": "#4ED8A0",
           "name": "rainforest",
           "value": 25000
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071af7257c514000",
       "attributes": {
        "name": "Site Efficiency",
        "properties": {
         "shape": "chronograf-v2",
         "type": "gauge",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => \n  \t(r._measurement == \"ac_measurements\" or r._measurement == \"dc_measurements\") and\n    r._field == \"power\" and r._inverter == \"site\" )\n  |> last()\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_measurement\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ _time: r._time, _field: \"percent\", _value: \n        if not exists r.dc_measurements or r.dc_measurements == 0.0 then 0.0\n        else if not exists r.ac_measurements or r.ac_measurements == 0.0 then 0.0\n        else float(v: r.ac_measurements) / float(v: r.dc_measurements) * 100.0 \n  }))",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": " %",
         "tickSuffix": "",
         "colors": [
          {
           "id": "0",
           "type": "min",
           "hex": "#BF3D5E",
           "name": "ruby",
           "value": 0
          },
          {
           "id": "1",
           "type": "max",
           "hex": "#4ED8A0",
           "name": "rainforest",
           "value": 100
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071af7aa6f514000",
       "attributes": {
        "name": "Last 30 Days",
        "properties": {
         "shape": "chronograf-v2",
         "queries": [
          {
           "text": "import \"experimental\"\nimport \"date\"\n\nlocal_time = experimental.addDuration(d: -5h, to: now())\n\n// This can be used to align results with x-axis labels\ntimeAxisShift = -0h\n\npast_30 = from(bucket: \"multisma2\")\n  |> range(start: -32d)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"midnight\")\n  |> sort(columns: [\"_time\"], desc: true)\n  |> difference()\n  |> map(fn: (r) => ({ _time: r._time, _kwh: float(v: r._value) * -0.001 }))\n  |> sort(columns: [\"_time\"], desc: false)\n  |> yield(name: \"past_30\")\n\nmidnight = from(bucket: \"multisma2\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"midnight\")\n  |> filter(fn: (r) => date.monthDay(t: r._time) == date.monthDay(t: local_time))\n  |> map(fn: (r) => ({ _time: r._time, _total_wh: r._value }))\n  |> yield(name: \"midnight\")\n\nright_now = from(bucket: \"multisma2\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"total_wh\")\n  |> last()\n  |> map(fn: (r) => ({ _time: r._time, _total_wh: r._value }))\n  |> yield(name: \"right_now\")\n\nthis_day = union(tables: [midnight, right_now])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> difference(nonNegative: false, columns: [\"_total_wh\"])\n  |> map(fn: (r) => ({ _time: r._time, _kwh: float(v: r._total_wh) * -0.001 }))\n  |> yield(name: \"this_day\")\n\nunion(tables: [past_30, this_day])\n  |> sort(columns: [\"_time\"], desc: false)\n  |> map(fn: (r) => ({ _time: r._time, _value: r._kwh }))\n  |> timeShift(duration: timeAxisShift, columns: [\"_time\"])\n  |> yield(name: \"combined\")",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "axes": {
          "x": {
           "bounds": [
            "",
            ""
           ],
           "label": "",
           "prefix": "",
           "suffix": "",
           "base": "10",
           "scale": "linear"
          },
          "y": {
           "bounds": [
            "0",
            ""
           ],
           "label": "",
           "prefix": "",
           "suffix": " kWh",
           "base": "",
           "scale": "linear"
          }
         },
         "type": "xy",
         "legend": {},
         "geom": "step",
         "colors": [
          {
           "id": "1ffcd091-2cd0-4a00-9872-5132d9249e8b",
           "type": "scale",
           "hex": "#31C0F6",
           "name": "Nineteen Eighty Four",
           "value": 0
          },
          {
           "id": "0e2118b8-e8d0-4a2d-bf78-f4aa9cbf3282",
           "type": "scale",
           "hex": "#A500A5",
           "name": "Nineteen Eighty Four",
           "value": 0
          },
          {
           "id": "48d81aeb-47e7-4e72-b484-d4e672397854",
           "type": "scale",
           "hex": "#FF7E27",
           "name": "Nineteen Eighty Four",
           "value": 0
          }
         ],
         "note": "",
         "showNoteWhenEmpty": false,
         "xColumn": "_time",
         "generateXAxisTicks": null,
         "xTotalTicks": 0,
         "xTickStart": 0,
         "xTickStep": 0,
         "yColumn": "_value",
         "generateYAxisTicks": null,
         "yTotalTicks": 0,
         "yTickStart": 0,
         "yTickStep": 0,
         "shadeBelow": false,
         "position": "overlaid",
         "timeFormat": "",
         "hoverDimension": "",
         "legendColorizeRows": false,
         "legendOpacity": 0,
         "legendOrientationThreshold": 0
        }
       }
      },
      {
       "type": "view",
       "id": "071af83133114000",
       "attributes": {
        "name": "Last 12 Months",
        "properties": {
         "shape": "chronograf-v2",
         "queries": [
          {
           "text": "import \"date\"\n\n// This can be used to align results with x-axis labels\ntimeAxisShift = -0d\n\n// Extract the last 12 months of production\npast_12 = from(bucket: \"multisma2\")\n  |> range(start: -13mo)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"midnight\")\n  |> filter(fn: (r) => date.monthDay(t: r._time) == 1)\n  |> sort(columns: [\"_time\"], desc: true)\n  |> difference()\n  |> map(fn: (r) => ({ _time: r._time, _kwh: float(v: r._value) * -0.001 }))\n  |> sort(columns: [\"_time\"], desc: false)\n  |> yield(name: \"past_12\")\n\n// Extract the current months of production\nfirst_of_month = from(bucket: \"multisma2\")\n  |> range(start: -32d)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"midnight\")\n  |> filter(fn: (r) => date.monthDay(t: r._time) == 1 )\n  |> map(fn: (r) => ({ _time: r._time, _total_wh: r._value }))\n  |> yield(name: \"first_of_month\")\n\ntoday = from(bucket: \"multisma2\")\n  |> range(start: -2h)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"total_wh\")\n  |> last()\n  |> map(fn: (r) => ({ _time: r._time, _total_wh: r._value }))\n  |> yield(name: \"today\")\n\nthis_month = union(tables: [first_of_month, today])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> difference(nonNegative: false, columns: [\"_total_wh\"])\n  |> map(fn: (r) => ({ _time: r._time, _kwh: float(v: r._total_wh) * -0.001 }))\n  |> yield(name: \"this_month\")\n\n// Combine the results in to a single table with '_value' and '_time' as the axes\nunion(tables: [past_12, this_month])\n  |> sort(columns: [\"_time\"], desc: false)\n  |> timeShift(duration: timeAxisShift, columns: [\"_time\"])\n  |> yield(name: \"combined\")",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "axes": {
          "x": {
           "bounds": [
            "",
            ""
           ],
           "label": "",
           "prefix": "",
           "suffix": "",
           "base": "10",
           "scale": "linear"
          },
          "y": {
           "bounds": [
            "0",
            "3500"
           ],
           "label": "",
           "prefix": "",
           "suffix": "Wh",
           "base": "",
           "scale": "linear"
          }
         },
         "type": "xy",
         "legend": {},
         "geom": "step",
         "colors": [
          {
           "id": "1ffcd091-2cd0-4a00-9872-5132d9249e8b",
           "type": "scale",
           "hex": "#31C0F6",
           "name": "Nineteen Eighty Four",
           "value": 0
          },
          {
           "id": "0e2118b8-e8d0-4a2d-bf78-f4aa9cbf3282",
           "type": "scale",
           "hex": "#A500A5",
           "name": "Nineteen Eighty Four",
           "value": 0
          },
          {
           "id": "48d81aeb-47e7-4e72-b484-d4e672397854",
           "type": "scale",
           "hex": "#FF7E27",
           "name": "Nineteen Eighty Four",
           "value": 0
          }
         ],
         "note": "",
         "showNoteWhenEmpty": false,
         "xColumn": "_time",
         "generateXAxisTicks": null,
         "xTotalTicks": 0,
         "xTickStart": 0,
         "xTickStep": 0,
         "yColumn": "_kwh",
         "generateYAxisTicks": null,
         "yTotalTicks": 0,
         "yTickStart": 0,
         "yTickStep": 0,
         "shadeBelow": false,
         "position": "overlaid",
         "timeFormat": "MMMM D, YYYY HH:mm:ss",
         "hoverDimension": "",
         "legendColorizeRows": false,
         "legendOpacity": 0,
         "legendOrientationThreshold": 0
        }
       }
      },
      {
       "type": "view",
       "id": "071af9e8f5114000",
       "attributes": {
        "name": "Inverter Output",
        "properties": {
         "shape": "chronograf-v2",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"ac_measurements\" and r._field == \"power\")\n  |> sample(n: 10, pos: 1)",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "axes": {
          "x": {
           "bounds": [
            "",
            ""
           ],
           "label": "",
           "prefix": "",
           "suffix": "",
           "base": "10",
           "scale": "linear"
          },
          "y": {
           "bounds": [
            "0",
            ""
           ],
           "label": "",
           "prefix": "",
           "suffix": "W",
           "base": "10",
           "scale": "linear"
          }
         },
         "type": "xy",
         "legend": {},
         "geom": "line",
         "colors": [
          {
           "id": "1ffcd091-2cd0-4a00-9872-5132d9249e8b",
           "type": "scale",
           "hex": "#31C0F6",
           "name": "Nineteen Eighty Four",
           "value": 0
          },
          {
           "id": "0e2118b8-e8d0-4a2d-bf78-f4aa9cbf3282",
           "type": "scale",
           "hex": "#A500A5",
           "name": "Nineteen Eighty Four",
           "value": 0
          },
          {
           "id": "48d81aeb-47e7-4e72-b484-d4e672397854",
           "type": "scale",
           "hex": "#FF7E27",
           "name": "Nineteen Eighty Four",
           "value": 0
          }
         ],
         "note": "",
         "showNoteWhenEmpty": false,
         "xColumn": "_time",
         "generateXAxisTicks": null,
         "xTotalTicks": 0,
         "xTickStart": 0,
         "xTickStep": 0,
         "yColumn": "_value",
         "generateYAxisTicks": null,
         "yTotalTicks": 0,
         "yTickStart": 0,
         "yTickStep": 0,
         "shadeBelow": false,
         "position": "overlaid",
         "timeFormat": "",
         "hoverDimension": "",
         "legendColorizeRows": false,
         "legendOpacity": 0,
         "legendOrientationThreshold": 0
        }
       }
      },
      {
       "type": "view",
       "id": "071afa5b00d14000",
       "attributes": {
        "name": "Clearsky Irradiance",
        "properties": {
         "shape": "chronograf-v2",
         "queries": [
          {
           "text": "panel_area = 144.0\npanel_efficiency = 0.1725\n\n// Collect the site total production data\nfrom(bucket: \"multisma2\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"total_wh\")\n  |> elapsed(unit: 1s)\n  |> difference(nonNegative: true, columns: [\"_value\"])\n  |> filter(fn: (r) => r._value > 0)\n  |> map(fn: (r) => ({ r with _value: float(v: r._value) * 3600.0 / float(v: r.elapsed) }))\n  |> drop(columns: [\"elapsed\", \"_start\", \"_stop\", \"_field\", \"_inverter\", \"_measurement\"])\n  |> yield(name: \"production\")\n\nfrom(bucket: \"multisma2\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"sun\" and r._field == \"irradiance\")\n  |> map(fn: (r) => ({ r with _value: r._value * panel_area * panel_efficiency }))\n  |> yield(name: \"irradiance\")\n",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "axes": {
          "x": {
           "bounds": [
            "",
            ""
           ],
           "label": "",
           "prefix": "",
           "suffix": "",
           "base": "10",
           "scale": "linear"
          },
          "y": {
           "bounds": [
            "",
            ""
           ],
           "label": "",
           "prefix": "",
           "suffix": "W",
           "base": "10",
           "scale": "linear"
          }
         },
         "type": "xy",
         "legend": {},
         "geom": "line",
         "colors": [
          {
           "id": "1ffcd091-2cd0-4a00-9872-5132d9249e8b",
           "type": "scale",
           "hex": "#31C0F6",
           "name": "Nineteen Eighty Four",
           "value": 0
          },
          {
           "id": "0e2118b8-e8d0-4a2d-bf78-f4aa9cbf3282",
           "type": "scale",
           "hex": "#A500A5",
           "name": "Nineteen Eighty Four",
           "value": 0
          },
          {
           "id": "48d81aeb-47e7-4e72-b484-d4e672397854",
           "type": "scale",
           "hex": "#FF7E27",
           "name": "Nineteen Eighty Four",
           "value": 0
          }
         ],
         "note": "",
         "showNoteWhenEmpty": false,
         "xColumn": "_time",
         "generateXAxisTicks": null,
         "xTotalTicks": 0,
         "xTickStart": 0,
         "xTickStep": 0,
         "yColumn": "_value",
         "generateYAxisTicks": null,
         "yTotalTicks": 0,
         "yTickStart": 0,
         "yTickStep": 0,
         "shadeBelow": false,
         "position": "overlaid",
         "timeFormat": "",
         "hoverDimension": "",
         "legendColorizeRows": false,
         "legendOpacity": 0,
         "legendOrientationThreshold": 0
        }
       }
      },
      {
       "type": "view",
       "id": "071afef3f3d14000",
       "attributes": {
        "name": "Today",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "import \"experimental\"\nimport \"date\"\n\nlocal_time = experimental.addDuration(d: -5h, to: now())\n\nmidnight = from(bucket: \"multisma2\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"midnight\")\n  |> filter(fn: (r) => date.monthDay(t: r._time) == date.monthDay(t: local_time))\n  |> map(fn: (r) => ({ _time: r._time, _total_wh: r._value }))\n  |> yield(name: \"midnight\")\n\nright_now = from(bucket: \"multisma2\")\n  |> range(start: -2h)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"total_wh\")\n  |> last()\n  |> map(fn: (r) => ({ _time: r._time, _total_wh: r._value }))\n  |> yield(name: \"right_now\")\n\nthis_day = union(tables: [midnight, right_now])\n  |> sort(columns: [\"_time\"], desc: false)\n  |> difference(nonNegative: true, columns: [\"_total_wh\"])\n  |> map(fn: (r) => ({ _time: experimental.addDuration(d: 1h, to: r._time), _kwh: float(v: r._total_wh) * 0.001 }))\n  |> yield(name: \"this_day\")",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": " kWh",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071aff0e99914000",
       "attributes": {
        "name": "This Month",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "import \"experimental\"\nimport \"date\"\n\n// Extract the current months of production\nfirst_of_month = from(bucket: \"multisma2\")\n  |> range(start: -32d)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"midnight\")\n  |> filter(fn: (r) => date.monthDay(t: r._time) == 1 )\n  |> map(fn: (r) => ({ _time: r._time, _total_wh: r._value }))\n  |> yield(name: \"first_of_month\")\n\nright_now = from(bucket: \"multisma2\")\n  |> range(start: -2h)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"total_wh\")\n  |> last()\n  |> map(fn: (r) => ({ _time: r._time, _total_wh: r._value }))\n  |> yield(name: \"right_now\")\n\nthis_month = union(tables: [first_of_month, right_now])\n  |> sort(columns: [\"_total_wh\"], desc: false)\n  |> difference(nonNegative: false, columns: [\"_total_wh\"])\n  |> map(fn: (r) => ({ _time: experimental.addDuration(d: 1h, to: r._time), _kwh: float(v: r._total_wh) * 0.001 }))\n  |> yield(name: \"this_month\")\n",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": " kWh",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b008de3d14000",
       "attributes": {
        "name": "This Year",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "import \"experimental\"\nimport \"date\"\n\n// This can be used to align results with x-axis labels\ntimeAxisShift = 15d\n\n// Extract the current months of production\nfirst_of_year = from(bucket: \"multisma2\")\n  |> range(start: -370d)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"midnight\")\n  |> filter(fn: (r) => date.monthDay(t: r._time) == 1 and date.month(t: r._time) == 1 )\n  |> map(fn: (r) => ({ _time: r._time, _total_wh: r._value }))\n  |> yield(name: \"first_of_year\")\n\nright_now = from(bucket: \"multisma2\")\n  |> range(start: -1h)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"total_wh\")\n  |> last()\n  |> map(fn: (r) => ({ _time: r._time, _total_wh: r._value }))\n  |> yield(name: \"right_now\")\n\nthis_year = union(tables: [first_of_year, right_now])\n  |> sort(columns: [\"_total_wh\"], desc: false)\n  |> difference(nonNegative: false, columns: [\"_total_wh\"])\n  |> map(fn: (r) => ({ _time: experimental.addDuration(d: 1h, to: r._time), _mwh: float(v: r._total_wh) * 0.000001 }))\n  |> yield(name: \"this_year\")\n",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": " MWh",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b0187d8114000",
       "attributes": {
        "name": "Lifetime",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -10m)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter== \"site\" and r._field == \"total_wh\")\n  |> last()\n  |> map(fn: (r) => ({ _time: r._time, _mwh: float(v: r._value) * 0.000001 }))\n//  |> yield(\"production_lifetime\")",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": " MWh",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b01fe87514000",
       "attributes": {
        "name": "CO2 Avoided Today",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "import \"experimental\"\nimport \"date\"\n\n// This can be used to align results with x-axis labels\ntimeAxisShift = 0h\n\nlocal_time = experimental.addDuration(d: -5h, to: now())\n\nmidnight = from(bucket: \"multisma2\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"midnight\")\n  |> filter(fn: (r) => date.monthDay(t: r._time) == date.monthDay(t: local_time) )\n  |> map(fn: (r) => ({ _time: r._time, _total_wh: r._value }))\n  |> yield(name: \"midnight\")\n\nright_now = from(bucket: \"multisma2\")\n  |> range(start: -1h)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter == \"site\" and r._field == \"total_wh\")\n  |> last()\n  |> map(fn: (r) => ({ _time: r._time, _total_wh: r._value }))\n  |> yield(name: \"right_now\")\n\nthis_day = union(tables: [midnight, right_now])\n  |> sort(columns: [\"_total_wh\"], desc: false)\n  |> difference(nonNegative: false, columns: [\"_total_wh\"])\n  |> map(fn: (r) => ({ _time: experimental.addDuration(d: 1h, to: r._time), _kgco2e: float(v: r._total_wh) * 0.18991 * 0.001 }))\n  |> yield(name: \"this_day\")",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": " kg",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b0334ef514000",
       "attributes": {
        "name": "Derating (sb71)",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => (r._measurement == \"status\") and (r._field == \"derating\"))\n  |> filter(fn: (r) => r._inverter == \"sb71\")\n  |> last()",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b035420d14000",
       "attributes": {
        "name": "Derating (sb72)",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => (r._measurement == \"status\") and (r._field == \"derating\"))\n  |> filter(fn: (r) => r._inverter == \"sb72\")\n  |> last()",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b03640c114000",
       "attributes": {
        "name": "Derating (sb51)",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => (r._measurement == \"status\") and (r._field == \"derating\"))\n  |> filter(fn: (r) => r._inverter == \"sb51\")\n  |> last()",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b0398e5114000",
       "attributes": {
        "name": "Grid Relay (sb71)",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => (r._measurement == \"status\") and (r._field == \"grid_relay\"))\n  |> filter(fn: (r) => r._inverter == \"sb71\")\n  |> last()",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b03a016d14000",
       "attributes": {
        "name": "Operating Status (sb71)",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => (r._measurement == \"status\") and (r._field == \"operating_status\"))\n  |> filter(fn: (r) => r._inverter == \"sb71\")\n  |> last()",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b0407cf114000",
       "attributes": {
        "name": "Condition (sb71)",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => (r._measurement == \"status\") and (r._field == \"condition\"))\n  |> filter(fn: (r) => r._inverter == \"sb71\")\n  |> last()",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b048367514000",
       "attributes": {
        "name": "Grid Relay (sb51)",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => (r._measurement == \"status\") and (r._field == \"grid_relay\"))\n  |> filter(fn: (r) => r._inverter == \"sb51\")\n  |> last()",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b0486aa914000",
       "attributes": {
        "name": "Grid Relay (sb72)",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => (r._measurement == \"status\") and (r._field == \"grid_relay\"))\n  |> filter(fn: (r) => r._inverter == \"sb72\")\n  |> last()",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b048cee514000",
       "attributes": {
        "name": "Operating Status (sb51)",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => (r._measurement == \"status\") and (r._field == \"operating_status\"))\n  |> filter(fn: (r) => r._inverter == \"sb51\")\n  |> last()",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b048f3c914000",
       "attributes": {
        "name": "Operating Status (sb72)",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => (r._measurement == \"status\") and (r._field == \"operating_status\"))\n  |> filter(fn: (r) => r._inverter == \"sb72\")\n  |> last()",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b049229114000",
       "attributes": {
        "name": "Condition (sb51)",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => (r._measurement == \"status\") and (r._field == \"condition\"))\n  |> filter(fn: (r) => r._inverter == \"sb51\")\n  |> last()",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b0494bc114000",
       "attributes": {
        "name": "Condition (sb72) ",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -15m)\n  |> filter(fn: (r) => (r._measurement == \"status\") and (r._field == \"condition\"))\n  |> filter(fn: (r) => r._inverter == \"sb72\")\n  |> last()",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b536983d14000",
       "attributes": {
        "name": "Elevation",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -30m)\n  |> filter(fn: (r) => r._measurement == \"sun\" and r._field== \"elevation\")\n  |> last()\n  |> yield(name: \"sun_elevation\")",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "º",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b540be1114000",
       "attributes": {
        "name": "Azimuth",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -30m)\n  |> filter(fn: (r) => r._measurement == \"sun\" and r._field== \"azimuth\")\n  |> last()\n  |> yield(name: \"sun_azimuthelevation\")",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": "º",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 0
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      },
      {
       "type": "view",
       "id": "071b6c4f92d14000",
       "attributes": {
        "name": "CO2 Avoided - Lifetime",
        "properties": {
         "shape": "chronograf-v2",
         "type": "single-stat",
         "queries": [
          {
           "text": "from(bucket: \"multisma2\")\n  |> range(start: -1h)\n  |> filter(fn: (r) => r._measurement == \"production\" and r._inverter== \"site\" and r._field == \"total_wh\")\n  |> last()\n  |> map(fn: (r) => ({ _time: r._time, _kgco2e: float(v: r._value) * 0.001 * 0.18991 * 0.001 }))",
           "editMode": "advanced",
           "name": "",
           "builderConfig": {
            "buckets": [],
            "tags": [
             {
              "key": "_measurement",
              "values": [],
              "aggregateFunctionType": "filter"
             }
            ],
            "functions": [
             {
              "name": "mean"
             }
            ],
            "aggregateWindow": {
             "period": "auto",
             "fillValues": false
            }
           }
          }
         ],
         "prefix": "",
         "tickPrefix": "",
         "suffix": " mt",
         "tickSuffix": "",
         "colors": [
          {
           "id": "base",
           "type": "text",
           "hex": "#00C9FF",
           "name": "laser",
           "value": 0
          }
         ],
         "decimalPlaces": {
          "isEnforced": true,
          "digits": 2
         },
         "note": "",
         "showNoteWhenEmpty": false
        }
       }
      }
     ]
    },
    "labels": []
   }